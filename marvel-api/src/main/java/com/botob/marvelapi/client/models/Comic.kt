/**
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Cable
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package com.botob.marvelapi.client.models

/**
 * 
 * @param id 
 * @param digitalId 
 * @param title The canonical title of the comic.
 * @param issueNumber 
 * @param variantDescription If the issue is a variant (e.g. an alternate cover, second printing, or director’s cut), a text description of the variant.
 * @param description The preferred description of the comic.
 * @param modified 
 * @param isbn The ISBN for the comic (generally only populated for collection formats).
 * @param upc The UPC barcode number for the comic (generally only populated for periodical formats).
 * @param diamondCode The Diamond code for the comic.
 * @param ean The EAN barcode for the comic.
 * @param issn The ISSN barcode for the comic.
 * @param format The publication format of the comic e.g. comic, hardcover, trade paperback.
 * @param pageCount 
 * @param textObjects 
 * @param resourceURI The canonical URL identifier for this resource.
 * @param urls 
 * @param series 
 * @param variants 
 * @param collections 
 * @param collectedIssues 
 * @param dates 
 * @param prices 
 * @param thumbnail 
 * @param images 
 * @param creators 
 * @param characters 
 * @param stories 
 * @param events 
 */
data class Comic (
    val id: Int,
    val digitalId: Int? = null,
    /* The canonical title of the comic. */
    val title: String,
    val issueNumber: Double? = null,
    /* If the issue is a variant (e.g. an alternate cover, second printing, or director’s cut), a text description of the variant. */
    val variantDescription: String? = null,
    /* The preferred description of the comic. */
    val description: String,
    val modified: String? = null,
    /* The ISBN for the comic (generally only populated for collection formats). */
    val isbn: String? = null,
    /* The UPC barcode number for the comic (generally only populated for periodical formats). */
    val upc: String? = null,
    /* The Diamond code for the comic. */
    val diamondCode: String? = null,
    /* The EAN barcode for the comic. */
    val ean: String? = null,
    /* The ISSN barcode for the comic. */
    val issn: String? = null,
    /* The publication format of the comic e.g. comic, hardcover, trade paperback. */
    val format: String? = null,
    val pageCount: Int? = null,
    val textObjects: Array<Any>? = null,
    /* The canonical URL identifier for this resource. */
    val resourceURI: String? = null,
    val urls: Array<Any>? = null,
    val series: SeriesSummary? = null,
    val variants: Array<Any>? = null,
    val collections: Array<Any>? = null,
    val collectedIssues: Array<Any>? = null,
    val dates: Array<Any>? = null,
    val prices: Array<Any>? = null,
    val thumbnail: Image,
    val images: Array<Any>? = null,
    val creators: CreatorList? = null,
    val characters: CharacterList? = null,
    val stories: StoryList? = null,
    val events: EventList? = null
) {
}